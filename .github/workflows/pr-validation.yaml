name: PR Validation

on: pull_request

jobs:
  # lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Clone repo
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #     - name: Setup go
  #       uses: actions/setup-go@v5
  #       with:
  #         go-version: "^1.23"
  #     - name: golangci-lint
  #       uses: golangci/golangci-lint-action@v6
  #       with:
  #         version: v1.62.0

  fmt:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: "^1.23"
      - name: Run fmt
        run: |
          make fmt
          git restore internal/generated/
      - name: Check if working tree is dirty
        run: |
          if [[ $(git status --porcelain) ]]; then
            git diff
            echo 'run make fmt and commit changes'
            exit 1
          fi

  vet:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: "^1.23"
      - name: Run vet
        run: |
          make vet
      - name: Check if working tree is dirty
        run: |
          if [[ $(git status --porcelain) ]]; then
            git diff
            echo 'run make vet and commit changes'
            exit 1
          fi

  generate-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: "^1.23"
      - name: Generate documentation
        run: |
          make generate-docs
      - name: Check if working tree is dirty
        run: |
          if [[ $(git status --porcelain) ]]; then
            git diff
            echo 'run make generate-docs and commit changes'
            exit 1
          fi

  generate-sdks:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: "^1.23"
      - name: Generate SDKs
        run: |
          TEMP_DIR=$(mktemp -d)
          curl --fail -o ${TEMP_DIR}/linux-x64.zip -L https://github.com/microsoft/kiota/releases/download/v1.21.0/linux-x64.zip
          env --chdir=${TEMP_DIR} unzip linux-x64.zip
          PATH=${TEMP_DIR}:${PATH} make generate-sdk
      - name: Check if working tree is dirty
        run: |
          if [[ $(git status --porcelain) ]]; then
            git diff
            echo 'run make make generate-sdk and commit changes'
            exit 1
          fi

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: "^1.23"
      - name: Run build
        run: |
          make build

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: "^1.23"
      - name: Run test
        run: |
          make test

  # coverage:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Clone repo
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #     - name: Setup go
  #       uses: actions/setup-go@v5
  #       with:
  #         go-version: "^1.23"
  #     - name: coverage
  #       run: |
  #         make cover
